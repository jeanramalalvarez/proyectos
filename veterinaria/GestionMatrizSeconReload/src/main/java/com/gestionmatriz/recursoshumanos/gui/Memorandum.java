/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Memorandum.java
 *
 * Created on 16-abr-2012, 11:59:03
 */
package com.gestionmatriz.recursoshumanos.gui;

import java.sql.SQLException;
import java.util.List;

import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

import org.apache.log4j.Logger;
import org.jdesktop.swingx.JXDatePicker;
import org.jdesktop.swingx.JXTable;

import com.gestionmatriz.dao.PaqueteBusinessDelegate;
import com.gestionmatriz.principal.gui.Principal;
import com.gestionmatriz.recursoshumanos.bean.Empresa;
import com.gestionmatriz.recursoshumanos.opciones.Opciones;
import com.gestionmatriz.reutilizable.util.Filtro;
import com.gestionmatriz.util.Mensaje;
import com.gestionmatriz.util.Util;
import com.gestionmatriz.util.ValidarCamposNulos;

/**
 *
 * @author zholo
 */
public class Memorandum extends javax.swing.JInternalFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static final Logger log=Logger.getLogger(Memorandum.class);
	/** Creates new form Memorandum */
    public Memorandum(Principal gui) {
        this.gui = gui;
        initComponents();
        tblListarMemorandum.setSortable(false);
        cargarComboEmpresa();
        cargarComboAsunto();
//        Util.hiloProgressBar(1, gui);
//        Util.hiloProgressBar(0, gui);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlNuevoMemorandum = new javax.swing.JPanel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        jXLabel5 = new org.jdesktop.swingx.JXLabel();
        dtpFechaMemorandum = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContenidoMemorandum = new org.jdesktop.swingx.JXTextArea();
        btnGuradaNuevoMemorandum = new org.jdesktop.swingx.JXButton();
        txtAsuntoMemorandum = new org.jdesktop.swingx.JXTextField();
        cboParaMemorandum = new org.jdesktop.swingx.JXComboBox();
        cboEmpresaMemo = new org.jdesktop.swingx.JXComboBox();
        jXLabel9 = new org.jdesktop.swingx.JXLabel();
        txtDeMemorandum = new org.jdesktop.swingx.JXTextField();
        pnlModificarMemorandum = new javax.swing.JPanel();
        dtpFechaInicialModificarMemo = new org.jdesktop.swingx.JXDatePicker();
        jXLabel6 = new org.jdesktop.swingx.JXLabel();
        jXLabel7 = new org.jdesktop.swingx.JXLabel();
        cboAsuntoTipoModificarMemo = new org.jdesktop.swingx.JXComboBox();
        jXLabel8 = new org.jdesktop.swingx.JXLabel();
        dtpFechaFinalModificarMemorandum = new org.jdesktop.swingx.JXDatePicker();
        btnBuscarMemorandum = new org.jdesktop.swingx.JXButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListarMemorandum = new org.jdesktop.swingx.JXTable();
        btnCancelarMemorandum = new org.jdesktop.swingx.JXButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("GESTIONAR MEMORANDUM");

        pnlNuevoMemorandum.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "NUEVO MEMORANDUM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jXLabel1.setText("De:");

        jXLabel2.setText("Para:");

        jXLabel3.setText("Asunto:");

        jXLabel4.setText("Fecha:");

        jXLabel5.setText("Contenido:");

        txtContenidoMemorandum.setColumns(20);
        txtContenidoMemorandum.setRows(5);
        jScrollPane1.setViewportView(txtContenidoMemorandum);

        btnGuradaNuevoMemorandum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gestionmatriz/icon/guardarblue.png"))); // NOI18N
        btnGuradaNuevoMemorandum.setText("Guardar");
        btnGuradaNuevoMemorandum.setPreferredSize(new java.awt.Dimension(95, 23));
        btnGuradaNuevoMemorandum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuradaNuevoMemorandumActionPerformed(evt);
            }
        });

        cboEmpresaMemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEmpresaMemoActionPerformed(evt);
            }
        });

        jXLabel9.setText("Empresa: ");

        javax.swing.GroupLayout pnlNuevoMemorandumLayout = new javax.swing.GroupLayout(pnlNuevoMemorandum);
        pnlNuevoMemorandum.setLayout(pnlNuevoMemorandumLayout);
        pnlNuevoMemorandumLayout.setHorizontalGroup(
            pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevoMemorandumLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNuevoMemorandumLayout.createSequentialGroup()
                        .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlNuevoMemorandumLayout.createSequentialGroup()
                                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboEmpresaMemo, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addComponent(txtAsuntoMemorandum, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addComponent(dtpFechaMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addComponent(cboParaMemorandum, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addComponent(txtDeMemorandum, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addComponent(btnGuradaNuevoMemorandum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(150, 150, 150))
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnlNuevoMemorandumLayout.setVerticalGroup(
            pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevoMemorandumLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboEmpresaMemo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboParaMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAsuntoMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlNuevoMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNuevoMemorandumLayout.createSequentialGroup()
                        .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jXLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlNuevoMemorandumLayout.createSequentialGroup()
                        .addComponent(dtpFechaMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnGuradaNuevoMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nuevo Memorandum", pnlNuevoMemorandum);

        pnlModificarMemorandum.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "MODIFICAR MEMORANDUM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jXLabel6.setText("Fecha Inicial:");

        jXLabel7.setText("Asunto:");

        jXLabel8.setText("Fecha Final:");

        btnBuscarMemorandum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gestionmatriz/icon/minibuscar.png"))); // NOI18N
        btnBuscarMemorandum.setText("Buscar Memorandum");
        btnBuscarMemorandum.setPreferredSize(new java.awt.Dimension(166, 23));
        btnBuscarMemorandum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMemorandumActionPerformed(evt);
            }
        });

        tblListarMemorandum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "De", "Para", "Asusnto", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblListarMemorandum);

        btnCancelarMemorandum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gestionmatriz/icon/eliminar.png"))); // NOI18N
        btnCancelarMemorandum.setText("Cancelar Memorandum");
        btnCancelarMemorandum.setPreferredSize(new java.awt.Dimension(166, 23));
        btnCancelarMemorandum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarMemorandumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlModificarMemorandumLayout = new javax.swing.GroupLayout(pnlModificarMemorandum);
        pnlModificarMemorandum.setLayout(pnlModificarMemorandumLayout);
        pnlModificarMemorandumLayout.setHorizontalGroup(
            pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModificarMemorandumLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlModificarMemorandumLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlModificarMemorandumLayout.createSequentialGroup()
                        .addGroup(pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlModificarMemorandumLayout.createSequentialGroup()
                                .addComponent(dtpFechaInicialModificarMemo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(dtpFechaFinalModificarMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cboAsuntoTipoModificarMemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlModificarMemorandumLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarMemorandum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelarMemorandum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        pnlModificarMemorandumLayout.setVerticalGroup(
            pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModificarMemorandumLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboAsuntoTipoModificarMemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlModificarMemorandumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpFechaInicialModificarMemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpFechaFinalModificarMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarMemorandum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modificar Memorandum", pnlModificarMemorandum);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnGuradaNuevoMemorandumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuradaNuevoMemorandumActionPerformed
//    if(validarDePara()==true){ 
    if (!Filtro.opcionPermitida(gui.getLstFuncionesUsuario(), Opciones.getGENERARMEMORANDUM())) {
        Mensaje.mensaje(this, "Opción no autorizada para su Usuario", Mensaje.TITULO_ME, Mensaje.ERROR);
        return;
    }

    if (fechaSeleccionada() == true) {
        if (validarObservaciones() == true) {

            com.gestionmatriz.recursoshumanos.bean.Memorandum objMemorandum =
                    new com.gestionmatriz.recursoshumanos.bean.Memorandum();
            com.gestionmatriz.recursoshumanos.bean.Personal objPersona =
                    lista.get(cboParaMemorandum.getSelectedIndex() - 1);
            String str_Codigo = objPersona.getStr_codigo();
            int int_idPersona = Integer.parseInt(str_Codigo.substring(1));
            log.info("idPersona---:" + int_idPersona);

            String str_Receptor = objPersona.getStr_nombres() + " " + objPersona.getStr_apePaterno()
                    + " " + objPersona.getStr_apeMaterno();
            String str_fecha = Util.getFecha("yyyy-MM-dd", dtpFechaMemorandum.getDate());

            objMemorandum.setInt_idPersona(int_idPersona);
            objMemorandum.setStr_numero(null);
            objMemorandum.setStr_emisor(txtDeMemorandum.getText());
            objMemorandum.setStr_receptor(str_Receptor);
            objMemorandum.setStr_asunto(txtAsuntoMemorandum.getText());
            objMemorandum.setDte_fecha(str_fecha);
            objMemorandum.setStr_cuerpo(txtContenidoMemorandum.getText());
            objMemorandum.setStr_usuarioCreador(gui.getBarraEstado().getUsuario());
            try {

                if (PaqueteBusinessDelegate.getMemorandumService().registrarMemorandum(objMemorandum) == true) {
                    cargarComboAsunto();
                    Mensaje.mensaje(this, "Memorándum Registrado Correctamente", Mensaje.TITULO_ME, Mensaje.INFORMACION);
                } else {
                    Mensaje.mensaje(this, "No se pudo registrar Memorándum", Mensaje.TITULO_ME, Mensaje.ERROR);
                }
            } catch (SQLException ex) {
                log.error("Error al registrar memo:" + ex);
            }

        }
    }
//    }
}//GEN-LAST:event_btnGuradaNuevoMemorandumActionPerformed

private void btnCancelarMemorandumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarMemorandumActionPerformed

    if (!Filtro.opcionPermitida(gui.getLstFuncionesUsuario(), Opciones.getCANCELARMEMORANDUM())) {
        Mensaje.mensaje(this, "Opción no autorizada para su Usuario", Mensaje.TITULO_ME, Mensaje.ERROR);
        return;
    }


    int index = tblListarMemorandum.getSelectedRow();
    int idMemorandum = listaMemosbuscar.get(index).getInt_idMemorandum();
    log.info("idMemorandum--:" + idMemorandum);
    try {
        if (PaqueteBusinessDelegate.getMemorandumService().updateEstadoMemorandum(idMemorandum) == true) {
            Mensaje.mensaje(this, "Memorándum cancelado", Mensaje.TITULO_ME, Mensaje.INFORMACION);

        } else {
            Mensaje.mensaje(this, "Error no se canceló el Memorándum", Mensaje.TITULO_ME, Mensaje.ERROR);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_btnCancelarMemorandumActionPerformed

private void btnBuscarMemorandumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMemorandumActionPerformed
    if (!Filtro.opcionPermitida(gui.getLstFuncionesUsuario(), Opciones.getCONSULTARMEMORANDUM())) {
        Mensaje.mensaje(this, "Opción no autorizada para su Usuario", Mensaje.TITULO_ME, Mensaje.ERROR);
        return;
    }

    if (validarAsuntoModificar() == true) {
        if (fechaModificar() == true) {
            try {
                String asunto = cboAsuntoTipoModificarMemo.getSelectedItem().toString();
                String fechaInicial = Util.getFecha("yyyy-MM-dd", dtpFechaInicialModificarMemo.getDate());
                String fechaFinal = Util.getFecha("yyyy-MM-dd", dtpFechaFinalModificarMemorandum.getDate());

                listaMemosbuscar = PaqueteBusinessDelegate.getMemorandumService().
                        buscarMemorandum(asunto, fechaInicial, fechaFinal);
                cargarTablaModificarMemos(listaMemosbuscar, tblListarMemorandum);
            } catch (SQLException ex) {
                log.error("Error al buscar memos :" + ex);
            }
        }
    }
}//GEN-LAST:event_btnBuscarMemorandumActionPerformed

    public void cargarTablaModificarMemos(
            List<com.gestionmatriz.recursoshumanos.bean.Memorandum> listaMemosbuscar,
            JXTable tabla) {

        String[] objTitulo = {"NUMERO", "DE:", "PARA:", "ASUNTO", "FECHA", "CONTENIDO", "ESTADO"};
        String[][] objData = new String[listaMemosbuscar.size()][7];


        int i = 0;
        for (com.gestionmatriz.recursoshumanos.bean.Memorandum lisatMemos : listaMemosbuscar) {
            objData[i][0] = lisatMemos.getStr_numero();
            objData[i][1] = lisatMemos.getStr_emisor();
            objData[i][2] = lisatMemos.getStr_receptor();
            objData[i][3] = lisatMemos.getStr_asunto();
            objData[i][4] = lisatMemos.getDte_fecha();
            objData[i][5] = lisatMemos.getStr_cuerpo();
            objData[i][6] = lisatMemos.getStr_estado();


            i++;
        }

        DefaultTableModel modelo = new DefaultTableModel(objData, objTitulo);
        tabla.setModel(modelo);
        this.listaMemosbuscar = listaMemosbuscar;
    }

private void cboEmpresaMemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEmpresaMemoActionPerformed
    if (cboEmpresaMemo.getSelectedIndex() != 0) {
        cargarComboTrabajador();
    }
}//GEN-LAST:event_cboEmpresaMemoActionPerformed

    private void cargarComboEmpresa() {

        cboEmpresaMemo.removeAllItems();
        Object objTitle = ".::Seleccione una Empresa::.";

        cboEmpresaMemo.addItem(objTitle);
        try {
            ListaEmpresa = PaqueteBusinessDelegate.getContratoService().listarEmpresa();
            Object item;
            for (Empresa empresa : ListaEmpresa) {
                item = empresa.getStr_razonSocial();
                cboEmpresaMemo.addItem(item);
            }
        } catch (SQLException ex) {
            log.error("Error al cargar empresas: " + ex.getMessage());
        }

    }

    private void cargarComboTrabajador() {
        cboParaMemorandum.removeAllItems();
        int index = cboEmpresaMemo.getSelectedIndex();
        if (index <= 0) {
        	log.info("index--:" + index);
            Mensaje.mensaje(this, "Seleccione una Empresa", Mensaje.TITULO_ME, Mensaje.ERROR);
            return;
        } else {
            int idEmpresa = ListaEmpresa.get(cboEmpresaMemo.getSelectedIndex() - 1).getInt_idEmpresa();

            lista = PaqueteBusinessDelegate.getPersonalService().BuscarPersonaXEmpresa(idEmpresa);

            cboParaMemorandum.addItem(".::Seleccionar un trabajador::.");
            for (com.gestionmatriz.recursoshumanos.bean.Personal personal : lista) {
                cboParaMemorandum.addItem(personal.getStr_codigo() + " - "
                        + personal.getStr_apePaterno() + " "
                        + personal.getStr_apeMaterno() + " " + personal.getStr_nombres());
            }
        }
    }

    public void cargarComboAsunto() {
        cboAsuntoTipoModificarMemo.removeAllItems();
        try {
            listaMemorandum = PaqueteBusinessDelegate.getMemorandumService().listarMemorandum();
            if (listaMemorandum.size() > 0) {
                cboAsuntoTipoModificarMemo.addItem(".::Seleccionar un asunto::.");
                for (com.gestionmatriz.recursoshumanos.bean.Memorandum memos : listaMemorandum) {
                    cboAsuntoTipoModificarMemo.addItem(memos.getStr_asunto());
                }
            } else {
                Mensaje.mensaje(this, "No hay memorándums registrados", Mensaje.TITULO_ME, Mensaje.INFORMACION);
            }
        } catch (SQLException ex) {
            log.error("Error al cargar lista memorándum :" + ex);
        }

    }

//public boolean validarDePara(){
//    boolean valor=true;
//    JTextField []txts={
//        txtEmisorMemorandum,
//        txtReceptorMemorandum,
//        txtAsuntoMemorandum};
//    
//        if(ValidarCamposNulos.validar(txts)==false){
//            Mensaje.mensaje(this, "Debe completar los campos resaltados",
//                    Mensaje.TITULO_ME, Mensaje.ADVERTENCIA);
//            valor= false;
//        }    
//    return valor;
//}
    public boolean fechaSeleccionada() {
        boolean valor = true;

        JXDatePicker[] dtps = {
            dtpFechaMemorandum};

        if (ValidarCamposNulos.validarDatePicker(dtps) == false) {
            Mensaje.mensaje(this, "Debe seleccionar una fecha",
                    Mensaje.TITULO_ME, Mensaje.ADVERTENCIA);
            valor = false;
        }
        return valor;
    }

    public boolean validarObservaciones() {
        boolean valor = true;
        if (ValidarCamposNulos.validarTxtArea(txtContenidoMemorandum) == false) {
            Mensaje.mensaje(this, "Debe ingresar el contenido del memorándum",
                    Mensaje.TITULO_ME, Mensaje.ADVERTENCIA);
            valor = false;
        }
        return valor;
    }

    public boolean validarAsuntoModificar() {
        boolean valor = true;
        JComboBox[] cbos = {
            cboAsuntoTipoModificarMemo};

        if (ValidarCamposNulos.validarCombos(cbos) == false) {
            Mensaje.mensaje(this, "Debe Seleccionar un asunto para iniciar la búsqueda",
                    Mensaje.TITULO_ME, Mensaje.ADVERTENCIA);
            valor = false;
        }
        return valor;
    }

    public boolean fechaModificar() {
        boolean valor = true;

        JXDatePicker[] dtps = {
            dtpFechaInicialModificarMemo,
            dtpFechaFinalModificarMemorandum};

        if (ValidarCamposNulos.validarDatePicker(dtps) == false) {
            Mensaje.mensaje(this, "Debe seleccionar un rango de Fechas",
                    Mensaje.TITULO_ME, Mensaje.ADVERTENCIA);
            valor = false;
        }
        return valor;
    }

    public boolean tablaModificaCancelar() {
        boolean valor = true;
        if (ValidarCamposNulos.validarTablaVacia(tblListarMemorandum) == false) {
            Mensaje.mensaje(this, "Debe buscar y elegir un memorándum de la tabla",
                    Mensaje.TITULO_ME, Mensaje.ADVERTENCIA);
            valor = false;
        }
        return valor;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnBuscarMemorandum;
    private org.jdesktop.swingx.JXButton btnCancelarMemorandum;
    private org.jdesktop.swingx.JXButton btnGuradaNuevoMemorandum;
    private org.jdesktop.swingx.JXComboBox cboAsuntoTipoModificarMemo;
    private org.jdesktop.swingx.JXComboBox cboEmpresaMemo;
    private org.jdesktop.swingx.JXComboBox cboParaMemorandum;
    private org.jdesktop.swingx.JXDatePicker dtpFechaFinalModificarMemorandum;
    private org.jdesktop.swingx.JXDatePicker dtpFechaInicialModificarMemo;
    private org.jdesktop.swingx.JXDatePicker dtpFechaMemorandum;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXLabel jXLabel5;
    private org.jdesktop.swingx.JXLabel jXLabel6;
    private org.jdesktop.swingx.JXLabel jXLabel7;
    private org.jdesktop.swingx.JXLabel jXLabel8;
    private org.jdesktop.swingx.JXLabel jXLabel9;
    private javax.swing.JPanel pnlModificarMemorandum;
    private javax.swing.JPanel pnlNuevoMemorandum;
    private org.jdesktop.swingx.JXTable tblListarMemorandum;
    private org.jdesktop.swingx.JXTextField txtAsuntoMemorandum;
    private org.jdesktop.swingx.JXTextArea txtContenidoMemorandum;
    private org.jdesktop.swingx.JXTextField txtDeMemorandum;
    // End of variables declaration//GEN-END:variables
    private List<Empresa> ListaEmpresa;
    private List<com.gestionmatriz.recursoshumanos.bean.Personal> lista;
    private Principal gui;
    private List<com.gestionmatriz.recursoshumanos.bean.Memorandum> listaMemorandum, listaMemosbuscar;

    @Override
    public void dispose() {
//        try {
        gui.getBarraEstado().cerraVentana();
//            setDefaultCloseOperation(DISPOSE_ON_CLOSE); 
//            this.setClosed(true);
//        } catch (PropertyVetoException ex) {
//            log.error("Error al Intentar Cerrar Ventana Persona: "+ex.getMessage());
//        }
    }
}
